name: Unit Test
on:
  workflow_call:
    inputs:
      pom_dir:
        required: false
        type: string
        default: '.'
      e2e_test:
        required: false
        type: boolean
        default: false
      test_url_1:
        required: false
        type: string
        default: ""
      test_url_2:
        required: false
        type: string
        default: ""
    secrets:
      MAVEN_SERVER_ID:
        required: false
      MAVEN_USERNAME:
        required: false
      MAVEN_PASSWORD:
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Get tags
      run: |
        git tag -d $(git tag)
        git fetch --tags origin
    - uses: graalvm/setup-graalvm@v1
      with:
        java-version: '25'
        distribution: graalvm
        cache: 'maven'
    - name: Prepare Maven settings.xml
      if: ${{ env.MAVEN_SERVER_ID != '' && env.MAVEN_USERNAME != '' && env.MAVEN_PASSWORD != '' }}
      uses: categolj/workflows/.github/actions/prepare-settings-xml@main
      env:
        MAVEN_SERVER_ID: ${{ secrets.MAVEN_SERVER_ID }}
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      with:
        server_id: ${{ secrets.MAVEN_SERVER_ID }}
        username: ${{ secrets.MAVEN_USERNAME }}
        password: ${{ secrets.MAVEN_PASSWORD }}
    - name: unit test
      run: ./mvnw -V -f ${{ inputs.pom_dir }} clean test --no-transfer-progress
      env:
        AWS_REGION: ap-northeast-1
    - name: Build Jar
      if: inputs.e2e_test
      run: ./mvnw -V -f ${{ inputs.pom_dir }} package -DskipTests --no-transfer-progress
    - name: Prepare wait.sh
      if: inputs.e2e_test
      run: |
        wget -q https://github.com/making/workflows/raw/main/wait.sh
        chmod +x wait.sh
    - name: E2E Test
      if: inputs.e2e_test
      env:
        TEST_URL_1: ${{ inputs.test_url_1 }}
        TEST_URL_2: ${{ inputs.test_url_2 }}
      run: |
        java -jar ${{ inputs.pom_dir }}/target/*.jar --server.port=8080 & ./wait.sh
        if [ -n "${TEST_URL_1}" ]; then
          curl --fail --show-error --silent "${TEST_URL_1}"
        fi
        if [ -n "${TEST_URL_2}" ]; then
          curl --fail --show-error --silent "${TEST_URL_2}"
        fi
        pkill -KILL java
