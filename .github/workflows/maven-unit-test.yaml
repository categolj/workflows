name: Maven Unit Test
on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        default: '21'
      distribution:
        required: false
        type: string
        default: 'liberica'
      e2e_test:
        required: false
        type: boolean
        default: false
      test_url_1:
        required: false
        type: string
        default: ""
      test_url_2:
        required: false
        type: string
        default: ""
      upload_target:
        required: false
        type: boolean
        default: true
    secrets:
      MAVEN_SERVER_ID:
        required: false
      MAVEN_USERNAME:
        required: false
      MAVEN_PASSWORD:
        required: false
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.version }}
        distribution: ${{ inputs.distribution }}
        cache: 'maven'
    - name: Prepare Maven settings.xml
      if: ${{ env.MAVEN_SERVER_ID != '' && env.MAVEN_USERNAME != '' && env.MAVEN_PASSWORD != '' }}
      uses: categolj/workflows/.github/actions/prepare-settings-xml@main
      env:
        MAVEN_SERVER_ID: ${{ secrets.MAVEN_SERVER_ID }}
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      with:
        server_id: ${{ secrets.MAVEN_SERVER_ID }}
        username: ${{ secrets.MAVEN_USERNAME }}
        password: ${{ secrets.MAVEN_PASSWORD }}
    - name: mvn test
      env:
        _JAVA_OPTIONS: -Djava.net.preferIPv4Stack=true
      run: ./mvnw -V --no-transfer-progress test
    - name: Build Jar
      if: inputs.e2e_test
      run: ./mvnw -V --no-transfer-progress package -DskipTests
    - name: Prepare wait.sh
      if: inputs.e2e_test
      run: |
        wget -q https://github.com/making/workflows/raw/main/wait.sh
        chmod +x wait.sh
    - name: E2E Test
      if: inputs.e2e_test
      env:
        TEST_URL_1: ${{ inputs.test_url_1 }}
        TEST_URL_2: ${{ inputs.test_url_2 }}
      run: |
        java -jar target/*.jar --server.port=8080 & ./wait.sh
        if [ -n "${TEST_URL_1}" ]; then
          curl --fail --show-error --silent "${TEST_URL_1}"
        fi
        if [ -n "${TEST_URL_2}" ]; then
          curl --fail --show-error --silent "${TEST_URL_2}"
        fi
        pkill -KILL java
    - name: Upload build artifacts
      if: inputs.upload_target
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: target
